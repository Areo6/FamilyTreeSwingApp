/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.connection;

import java.awt.BorderLayout;
import java.beans.IntrospectionException;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import javax.persistence.Query;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.person.Person;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.connection//DBConnection//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "DBConnectionTopComponent",
        iconBase = "org/connection/personIcon.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "org.connection.DBConnectionTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_DBConnectionAction",
        preferredID = "DBConnectionTopComponent"
)
@Messages({
    "CTL_DBConnectionAction=DBConnection",
    "CTL_DBConnectionTopComponent=DBConnection Window",
    "HINT_DBConnectionTopComponent=This is a DBConnection window"
})
public final class DBConnectionTopComponent extends TopComponent implements ExplorerManager.Provider{

    private final ExplorerManager em=new ExplorerManager(); 
    public DBConnectionTopComponent() throws IntrospectionException {
        initComponents();
        setName(Bundle.CTL_DBConnectionTopComponent());
        setToolTipText(Bundle.HINT_DBConnectionTopComponent());
        
        EntityManager entityManager = Persistence.createEntityManagerFactory("PersoLibraryPU").createEntityManager();
        Query query = entityManager.createNamedQuery("Person.findAll");
        List<Person> resultList = query.getResultList();
        //for (Person c : resultList) {
        //jTextArea1.append(c.getName() + " (" + c.getMiddlename()+ ")" + "\n");
//}
        em.setRootContext(new AbstractNode(Children.create(new PersoChildFactory(resultList), true)));
        BeanTreeView view = new BeanTreeView();
        add(view, BorderLayout.CENTER);
        associateLookup(ExplorerUtils.createLookup(em, this.getActionMap()));
        //em.setRootContext(new RootNode());
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        beanTreeView1 = new org.openide.explorer.view.BeanTreeView();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(beanTreeView1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(beanTreeView1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openide.explorer.view.BeanTreeView beanTreeView1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }
}
